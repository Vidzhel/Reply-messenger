<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:UI.UIPresenter.Converters"
                    xmlns:attachProperties="clr-namespace:UI.UIPresenter.Attachment_Properties"
                    >


    
    <!--Converters For text boxes-->
    <converters:FieldPlaceholder x:Key="PlaceholderControl"/>

    <!--Style for Data Fields-->
    <Style TargetType="TextBox" x:Key="DataField">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="CaretBrush" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">

                    <Grid>
                        
                        <!--Binding Border brush to control state at View Model-->
                        <Border x:Name="border"  CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{converters:ControlStateToColorBrush}">
                                    <Binding Path="FieldState"/>
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TextBox}"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <ScrollViewer x:Name="PART_ContentHost" Opacity="0.8" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--Field icon-->
                        <Label VerticalContentAlignment="Center" Foreground="{Binding ElementName=border, Path=BorderBrush}" Style="{StaticResource Sumbol}" Content="{TemplateBinding Tag, Converter={converters:TextToIcon}}" RenderTransformOrigin="0.5,0.5">
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="5" Y="0"/>
                                </TransformGroup>
                            </Label.RenderTransform>
                        </Label>

                        <!--Placeholder-->
                        <Label IsHitTestVisible="False" Foreground="{Binding ElementName=border, Path=BorderBrush}" Width="Auto" Height="15" HorizontalAlignment="Left" Content="{TemplateBinding Tag}">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="{StaticResource LightGrayBgBrush}"/>
                                    <Setter Property="Background" Value="{StaticResource DarkBgBrush}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="Padding" Value="5 0 5 0"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <TranslateTransform x:Name="Move" X="35" Y="0"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>

                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{converters:FieldPlaceholder}">
                                                    <Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TextBox}"/>
                                                    <Binding Path="Text.IsEmpty" RelativeSource="{RelativeSource  Mode=FindAncestor, AncestorType=TextBox}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>

                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="15"/>
                                                        <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="-18"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="35"/>
                                                        <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                            <Setter Property="Cursor"  Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource LightBlueBrush}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--Style for Data Field password box-->
    <Style TargetType="PasswordBox" x:Key="DataPasswordField">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="CaretBrush" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        
        <!--Set Attach Property-->
        <Setter Property="attachProperties:MonitorPasswordProperty.Value" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">

                    <Grid>
                        
                        <!--Binding Border brush to control state at View Model-->
                        <Border x:Name="border"  CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{converters:ControlStateToColorBrush}">
                                    <Binding Path="FieldState"/>
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=PasswordBox}"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <ScrollViewer x:Name="PART_ContentHost" Opacity="0.8" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--Field icon-->
                        <Label VerticalContentAlignment="Center" Foreground="{Binding ElementName=border, Path=BorderBrush}" Style="{StaticResource Sumbol}" Content="{TemplateBinding Tag, Converter={converters:TextToIcon}}" RenderTransformOrigin="0.5,0.5">
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="5" Y="0"/>
                                </TransformGroup>
                            </Label.RenderTransform>
                        </Label>

                        <!--Placeholder-->
                        <Label IsHitTestVisible="False" Foreground="{Binding ElementName=border, Path=BorderBrush}" Width="Auto" Height="15" HorizontalAlignment="Left" Content="{TemplateBinding Tag}">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="{StaticResource LightGrayBgBrush}"/>
                                    <Setter Property="Background" Value="{StaticResource DarkBgBrush}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="Padding" Value="5 0 5 0"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <TranslateTransform x:Name="Move" X="35" Y="0"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>

                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{converters:FieldPlaceholder}" ConverterParameter="true">
                                                    <Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=PasswordBox}"/>
                                                    <Binding Path="(attachProperties:HasTextProperty.Value)" RelativeSource="{RelativeSource  Mode=FindAncestor, AncestorType=PasswordBox}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>

                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="15"/>
                                                        <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="-18"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="35"/>
                                                        <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                            <Setter Property="Cursor"  Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource LightBlueBrush}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--Search Box-->
    <Style TargetType="TextBox" x:Key="SearchBox">
        <Setter Property="Background" Value="{StaticResource GrayBGBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource LightGrayBgBrush}"/>
        <Setter Property="CaretBrush" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="Padding" Value="40 0 0 0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">

                    <Grid>

                    <Border CornerRadius="5" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>

                    <!--Search icon-->
                    <Label Margin="5 0 0 0" FontSize="15" Foreground="{StaticResource  MiddleGrayBgBrush}" Style="{StaticResource Sumbol}" Content="" VerticalAlignment="Center"/>
                        
                    <!--Placeholder-->
                        <Label Name="Placeholder" Margin="35 0 0 0" FontSize="14" Foreground="{StaticResource MiddleGrayBgBrush}" Style="{StaticResource RegularText}" Content="Search..." VerticalAlignment="Center"/>

                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>

                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{converters:FieldPlaceholder}">
                                    <Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=Self}"/>
                                    <Binding Path="Text.IsEmpty" RelativeSource="{RelativeSource  Mode=Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="Visibility" TargetName="Placeholder" Value="Collapsed"/>
                        </DataTrigger>
                        
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--Regular Box-->
    <Style TargetType="TextBox" x:Key="RegularTextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource LightGrayBgBrush}"/>
        <Setter Property="CaretBrush" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="Padding" Value="40 0 0 0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>

        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">

                    <Grid>

                        <!--Bind Birder Brush to Field state at view model-->
                        <Border x:Name="border"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{converters:ControlStateToColorBrush}">
                                    <Binding Path="FieldState"/>
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TextBox}"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--Search icon-->
                        <Label Margin="5 0 0 0" FontWeight="Bold" FontSize="15" Foreground="{Binding ElementName=border, Path=BorderBrush}" Style="{StaticResource Sumbol}" Content="{Binding ElementName=Placeholder, Path=Content, Converter={converters:TextToIcon}}" VerticalAlignment="Center"/>
                        
                        <!--Placeholder-->
                        <Label Name="Placeholder" Margin="35 0 0 0" FontSize="14" Foreground="{Binding ElementName=border, Path=BorderBrush}" Style="{StaticResource RegularText}" Content="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=TextBox, Mode=FindAncestor}}" VerticalAlignment="Center"/>

                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>

                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{converters:FieldPlaceholder}">
                                    <Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=Self}"/>
                                    <Binding Path="Text.IsEmpty" RelativeSource="{RelativeSource  Mode=Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="Visibility" TargetName="Placeholder" Value="Collapsed"/>
                        </DataTrigger>
                        
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--Regular password Box-->
    <Style TargetType="PasswordBox" x:Key="RegularPasswordBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource LightGrayBgBrush}"/>
        <Setter Property="CaretBrush" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="Padding" Value="40 0 0 0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>

        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <Setter Property="attachProperties:MonitorPasswordProperty.Value" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">

                    <Grid>

                        <!--Bind Birder Brush to Field state at view model-->
                        <Border x:Name="border"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{converters:ControlStateToColorBrush}">
                                    <Binding Path="FieldState"/>
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=Self}"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--icon-->
                        <Label Margin="5 0 0 0" FontWeight="Bold" FontSize="15" Foreground="{Binding ElementName=border, Path=BorderBrush}" Style="{StaticResource Sumbol}" Content="{Binding ElementName=Placeholder, Path=Content, Converter={converters:TextToIcon}}" VerticalAlignment="Center"/>
                        
                        <!--Placeholder-->
                        <Label Name="Placeholder" Margin="35 0 0 0" FontSize="14" Foreground="{Binding ElementName=border, Path=BorderBrush}" Style="{StaticResource RegularText}" Content="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=PasswordBox, Mode=FindAncestor}}" VerticalAlignment="Center"/>

                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>

                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{converters:FieldPlaceholder}" ConverterParameter="true">
                                    <Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=Self}"/>
                                    <Binding Path="(attachProperties:HasTextProperty.Value)" RelativeSource="{RelativeSource Mode=Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="Visibility" TargetName="Placeholder" Value="Collapsed"/>
                        </DataTrigger>
                        
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--Message type bar-->
    <Style TargetType="TextBox" x:Key="MessageTypingBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource LightGrayBgBrush}"/>
        <Setter Property="CaretBrush" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="Padding" Value="20 5 0 5"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">

                    <Grid>

                        <Border CornerRadius="5" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--Placeholder-->
                        <Label Name="Placeholder" Margin="25 0 0 0" FontSize="14" Foreground="{StaticResource MiddleGrayBgBrush}" Style="{StaticResource RegularText}" Content="Type something..." VerticalAlignment="Center"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="IBeam"/>
                        </Trigger>

                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{converters:FieldPlaceholder}">
                                    <Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=Self}"/>
                                    <Binding Path="Text.IsEmpty" RelativeSource="{RelativeSource  Mode=Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="Visibility" TargetName="Placeholder" Value="Collapsed"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>