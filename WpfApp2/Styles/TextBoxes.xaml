<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UI.Styles"
                    xmlns:converters="clr-namespace:WpfApp2.UIPresenter.Converters">


    
    <!--Converters For text boxes-->
    <converters:FieldPlaceholder x:Key="PlaceholderControl"/>

    <!--Style for Data Fields-->
    <Style TargetType="TextBox" x:Key="DataField">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="CaretBrush" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" CornerRadius="3" BorderBrush="{StaticResource LightGrayBgBrush}" BorderThickness="2" Background="Transparent">
                        <Grid>
                            <TextBox Panel.ZIndex="2" TabIndex="0" CaretBrush="{TemplateBinding CaretBrush}" FontFamily="{TemplateBinding FontFamily}"
                                         FontSize="{TemplateBinding FontSize}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         BorderBrush="Transparent" BorderThickness="0" Background="Transparent" x:Name="Content"
                                         Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"/>
                            <Label Width="Auto" Height="15" HorizontalAlignment="Left" Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                    AncestorType={x:Type TextBox}}, Path=Text}">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Foreground" Value="{StaticResource LightGrayBgBrush}"/>
                                        <Setter Property="Background" Value="{StaticResource DarkBgBrush}"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="FontSize" Value="12"/>
                                        <Setter Property="Padding" Value="5 0 5 0"/>
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <TransformGroup>
                                                    <TranslateTransform x:Name="Move" X="35" Y="0"/>
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Value="True">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource PlaceholderControl}">
                                                        <Binding ElementName="Content" Path="IsFocused"/>
                                                        <Binding ElementName="Content" Path="Text.IsEmpty"/>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="15"/>
                                                            <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="-18"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="35"/>
                                                            <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="0"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
</ResourceDictionary>