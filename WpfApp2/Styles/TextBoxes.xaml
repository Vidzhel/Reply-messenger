<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:UI.UIPresenter.Converters">


    
    <!--Converters For text boxes-->
    <converters:FieldPlaceholder x:Key="PlaceholderControl"/>

    <!--Style for Data Fields-->
    <Style TargetType="TextBox" x:Key="DataField">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="30 0 0 0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="CaretBrush" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightGrayBgBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">

                    <Grid>

                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--Field icon-->
                        <Label VerticalContentAlignment="Center" Style="{StaticResource Sumbol}" Content="{TemplateBinding Tag, Converter={converters:TextToIcon}}" RenderTransformOrigin="0.5,0.5">
                            <Label.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="5" Y="0"/>
                                </TransformGroup>
                            </Label.RenderTransform>
                        </Label>

                        <!--Placeholder-->
                        <Label IsHitTestVisible="False" Width="Auto" Height="15" HorizontalAlignment="Left" Content="{TemplateBinding Tag}">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="{StaticResource LightGrayBgBrush}"/>
                                    <Setter Property="Background" Value="{StaticResource DarkBgBrush}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="Padding" Value="5 0 5 0"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <TranslateTransform x:Name="Move" X="35" Y="0"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>

                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{converters:FieldPlaceholder}">
                                                    <Binding Path="IsFocused" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TextBox}"/>
                                                    <Binding Path="Text.IsEmpty" RelativeSource="{RelativeSource  Mode=FindAncestor, AncestorType=TextBox}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>

                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="15"/>
                                                        <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="-18"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="35"/>
                                                        <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>


                                        <!--<DataTrigger Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="15"/>
                                                        <DoubleAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="-18"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="35"/>
                                                        <DoubleAnimation Duration="0:0:0.1"  Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>-->

                                        <!--<Binding Path="IsFocused" RelativeSource="{TemplateBinding}"/>-->
                                        <!--<Binding Path="Text.IsEmpty" RelativeSource="{TemplateBinding}"/>-->
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                            <Setter Property="Cursor"  Value="IBeam"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource LightBlueBrush}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>